6)Perform following morphological operattion of digital image:
Explain in brief (with equations)
1.Dilation
2.Erosion
3.Opening
4.Closing
5.Boundary Extraction
6.Hit or Miss transformation






i) erosion, dilation , opening  and closing -
code-
#Perform dilation and erosion
import numpy as np
import cv2
import matplotlib.pyplot as plt
image=cv2.imread("bubble.jpeg",cv2.IMREAD_GRAYSCALE)

#create a binary image having (0's and 1's)
#image=np.zeros((10,10),dtype=np.uint8)
image[3:7,3:7]=255 #add white square in middle
print("Input Image:")
print(image)
#define structuring element or kernel
kernel=np.ones((3,3),np.uint8)
#Perform dilation
dilation=cv2.dilate(image,kernel,iterations=1)
print("Dilated image:")
print(dilation)
#Perform erosion
erosion=cv2.erode(image,kernel, iterations=1)
print("Eroded image:")
print(erosion)
#Perform opening 
erode=cv2.erode(image,kernel,iterations=1)
opening=cv2.dilate(erode,kernel,iterations=1)
#Perform closing
dilate=cv2.dilate(image,kernel,iterations=1)
closing=cv2.erode(dilate,kernel,iterations=1)
#Show the original image
plt.subplot(2,3,1)
plt.imshow(image,cmap="gray")
plt.title('Original Image:')

#Show to eroded image
plt.subplot(2,3,2)
plt.imshow(erosion,cmap="gray")
plt.title('Eroded Image:')

#Show the dilated image
plt.subplot(2,3,3)
plt.imshow(opening,cmap="gray")
plt.title('Opening Image:')

#Show the original image
plt.subplot(2,3,4)
plt.imshow(image,cmap="gray")
plt.title('Original Image:')

#Show to eroded image
plt.subplot(2,3,5)
plt.imshow(dilation,cmap="gray")
plt.title('Dilated Image:')

#Show the dilated image
plt.subplot(2,3,6)
plt.imshow(closing,cmap="gray")
plt.title('Closing Image:')
plt.show()








